name: Apache Beam

on:
  schedule:
    - cron: "0 4 * * 6"
  workflow_dispatch:

env:
  DEVELOCITY_URL: "https://ge.solutions-team.gradle.com"
  GIT_REPO: "https://github.com/apache/beam"
  TASKS: ":javaPreCommit -PdisableSpotlessCheck=true -PdisableCheckStyle=true -x jmhTest"

jobs:
  Experiment:
    strategy:
      fail-fast: false
      matrix:
        include:
          - experimentId: 1
          - experimentId: 2
          - experimentId: 3
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          docker-images: false
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: 8
          distribution: "temurin"
      - name: Download latest version of the validation scripts
        uses: gradle/develocity-build-validation-scripts/.github/actions/gradle/download@actions-stable
        with:
          downloadDevelopmentRelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Remove Maven Settings
        # Beam uses the [gradle-maven-settings-plugin](https://github.com/mark-vieira/gradle-maven-settings-plugin/)
        # to read repo authentication from Maven settings and use it in their Gradle build. It seems that plugin does not
        # [support encrypted credentials](https://github.com/mark-vieira/gradle-maven-settings-plugin/issues/15),
        # but this is what GitHub Actions provides by default. Deleting `settings.xml` is what Beam do in their own CI
        # builds on GitHub Actions: https://github.com/apache/beam/blob/ca0345b8acc7dd5ebc0506d48faa6474fe0b3ca0/.github/workflows/java_tests.yml#L89
        run: rm $HOME/.m2/settings.xml
      - name: Ignore Test Failures
        run: |
          mkdir ~/git-hooks
          echo -e 'echo "\nallprojects { tasks.withType(Test::class).configureEach { ignoreFailures = true } }" >> build.gradle.kts\n' >> ~/git-hooks/post-checkout
          chmod +x ~/git-hooks/post-checkout
          git config --global core.hooksPath ~/git-hooks
      - name: Run experiment 1
        uses: gradle/develocity-build-validation-scripts/.github/actions/gradle/experiment-1@actions-stable
        env:
          DEVELOCITY_ACCESS_KEY: "${{ secrets.DV_SOLUTIONS_ACCESS_KEY }}"
        with:
          gitRepo: ${{ env.GIT_REPO }}
          tasks: ${{ env.TASKS }}
          develocityUrl: ${{ env.DEVELOCITY_URL }}
        if: matrix.experimentId == 1
      - name: Run experiment 2
        uses: gradle/develocity-build-validation-scripts/.github/actions/gradle/experiment-2@actions-stable
        env:
          DEVELOCITY_ACCESS_KEY: "${{ secrets.DV_SOLUTIONS_ACCESS_KEY }}"
        with:
          gitRepo: ${{ env.GIT_REPO }}
          tasks: ${{ env.TASKS }}
          develocityUrl: ${{ env.DEVELOCITY_URL }}
          failIfNotFullyCacheable: true
        if: matrix.experimentId == 2
      - name: Run experiment 3
        uses: gradle/develocity-build-validation-scripts/.github/actions/gradle/experiment-3@actions-stable
        env:
          DEVELOCITY_ACCESS_KEY: "${{ secrets.DV_SOLUTIONS_ACCESS_KEY }}"
        with:
          gitRepo: ${{ env.GIT_REPO }}
          tasks: ${{ env.TASKS }}
          develocityUrl: ${{ env.DEVELOCITY_URL }}
          failIfNotFullyCacheable: true
        if: matrix.experimentId == 3
