name: Run experiments

on:
  schedule:
    # Every Sunday at 7.00
    - cron: '0 7 * * 0'

  workflow_dispatch:
    inputs:
      project:
        type: choice
        description: Project
        options:
          - androidx
          - gradle
          - grails-core
          - hibernate-orm
          - junit5
          - kotlin
          - micrometer
          - micronaut
          - openrewrite
          - opentelemetry
          - ratpack
          - spock
          - spring-framework
          - testcontainers
        required: true
      exp:
          type: choice
          description: Experiments
          options:
              - ALL
              - exp1
              - exp2
              - exp3
          required: true

env:
    EXPERIMENT_PROJECT: ${{ github.event.inputs.project || 'ALL' }}
    EXPERIMENT_ID: ${{ github.event.inputs.exp || 'ALL' }}
    GRADLE_ENTERPRISE_URL: https://ge.solutions-team.gradle.com

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.data-load.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - name: Load data
        id: data-load
        run: |
            if [ "${{ env.EXPERIMENT_PROJECT }}" = "ALL" ]; then
              matrix=`cat ./.github/projects.json`
            else
              matrix=`cat .github/projects.json | jq 'del(.include[] | select(.project != "${{ env.EXPERIMENT_PROJECT }}"))'`
            fi

            # the following lines are required to handle multiline variable
            matrix="${matrix//'%'/'%25'}"
            matrix="${matrix//$'\n'/'%0A'}"
            matrix="${matrix//$'\r'/'%0D'}"

            echo "::set-output name=matrix::$matrix"

  experiments:
    needs: matrix
    runs-on: ubuntu-latest
    env:
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
    strategy:
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'
      - uses: jprinet/gradle-enterprise-build-validation-scripts/.github/composite/getLatest@v1.0.4
      - uses: jprinet/gradle-enterprise-build-validation-scripts/.github/composite/exp1@v1.0.4
        with:
          repositoryUrl: ${{ matrix.repositoryUrl }}
          branch: ${{ matrix.branch }}
          task: ${{ matrix.task }}
          gradleEnterpriseUrl: ${{ env.GRADLE_ENTERPRISE_URL }}
        if: (env.EXPERIMENT_ID == 'ALL' || env.EXPERIMENT_ID == 'exp1')
      - name: Summary Experiment 1
        run: |
          cat gradle-enterprise-gradle-build-validation/.data/01-*/*/*.receipt
        shell: bash
        if: (env.EXPERIMENT_ID == 'ALL' || env.EXPERIMENT_ID == 'exp1')
      - uses: jprinet/gradle-enterprise-build-validation-scripts/.github/composite/exp2@v1.0.4
        with:
          repositoryUrl: ${{ matrix.repositoryUrl }}
          branch: ${{ matrix.branch }}
          task: ${{ matrix.task }}
          gradleEnterpriseUrl: ${{ env.GRADLE_ENTERPRISE_URL }}
        if: (env.EXPERIMENT_ID == 'ALL' || env.EXPERIMENT_ID == 'exp2')
      - name: Summary Experiment 2
        run: |
            cat gradle-enterprise-gradle-build-validation/.data/02-*/*/*.receipt
        shell: bash
        if: (env.EXPERIMENT_ID == 'ALL' || env.EXPERIMENT_ID == 'exp2')
      - uses: jprinet/gradle-enterprise-build-validation-scripts/.github/composite/exp3@v1.0.4
        with:
          repositoryUrl: ${{ matrix.repositoryUrl }}
          branch: ${{ matrix.branch }}
          task: ${{ matrix.task }}
          gradleEnterpriseUrl: ${{ env.GRADLE_ENTERPRISE_URL }}
        if: (env.EXPERIMENT_ID == 'ALL' || env.EXPERIMENT_ID == 'exp3')
      - name: Summary Experiment 3
        run: |
            cat gradle-enterprise-gradle-build-validation/.data/03-*/*/*.receipt
        shell: bash
        if: (env.EXPERIMENT_ID == 'ALL' || env.EXPERIMENT_ID == 'exp3')
