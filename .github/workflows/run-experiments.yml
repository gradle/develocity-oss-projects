name: Run experiments

on:
  schedule:
    # Every Sunday at 7.00
    - cron: "0 7 * * 0"

  workflow_dispatch:
    inputs:
      project:
        type: choice
        description: Project
        options:
          - androidx
          - gradle
          - grails-core
          - hibernate-orm
          - junit5
          - kotlin
          - micrometer
          - micronaut
          - openrewrite
          - opentelemetry
          - ratpack
          - spock
          - spring-framework
          - testcontainers
        required: true
      exp:
        type: choice
        description: Experiments
        options:
          - ALL
          - exp1
          - exp2
          - exp3
        required: true

env:
  # Default to ALL for scheduled runs
  EXPERIMENT_PROJECT: ${{ github.event.inputs.project || 'ALL' }}
  EXPERIMENT_ID: ${{ github.event.inputs.exp || 'ALL' }}
  GRADLE_ENTERPRISE_URL: https://ge.solutions-team.gradle.com

jobs:
  # Load job input parameters
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.data-load.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - name: Load data
        id: data-load
        run: |
          if [ "${{ env.EXPERIMENT_PROJECT }}" = "ALL" ]; then
            matrix=`cat data/projects.json`
          else
            matrix=`cat data/projects.json | jq 'del(.include[] | select(.project != "${{ env.EXPERIMENT_PROJECT }}"))'`
          fi

          # the following lines are required to handle multiline variable
          matrix="${matrix//'%'/'%25'}"
          matrix="${matrix//$'\n'/'%0A'}"
          matrix="${matrix//$'\r'/'%0D'}"

          echo "::set-output name=matrix::$matrix"

  experiments:
    needs: matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
      fail-fast: false
      max-parallel: 4
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/setup
        with:
          setup: ${{ matrix.setup }}
      - uses: gradle/gradle-enterprise-build-validation-scripts/.github/composite/getLatest@v1.0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: gradle/gradle-enterprise-build-validation-scripts/.github/composite/exp1@v1.0.2
        with:
          repositoryUrl: ${{ matrix.repositoryUrl }}
          branch: ${{ matrix.branch }}
          task: ${{ matrix.task }}
          projectDir: ${{ matrix.projectDir }}
          gradleEnterpriseUrl: ${{ env.GRADLE_ENTERPRISE_URL }}
        if: (env.EXPERIMENT_ID == 'ALL' || env.EXPERIMENT_ID == 'exp1')
      - uses: gradle/gradle-enterprise-build-validation-scripts/.github/composite/exp2@v1.0.2
        with:
          repositoryUrl: ${{ matrix.repositoryUrl }}
          branch: ${{ matrix.branch }}
          task: ${{ matrix.task }}
          projectDir: ${{ matrix.projectDir }}
          gradleEnterpriseUrl: ${{ env.GRADLE_ENTERPRISE_URL }}
        if: (env.EXPERIMENT_ID == 'ALL' || env.EXPERIMENT_ID == 'exp2')
      - uses: gradle/gradle-enterprise-build-validation-scripts/.github/composite/exp3@v1.0.2
        with:
          repositoryUrl: ${{ matrix.repositoryUrl }}
          branch: ${{ matrix.branch }}
          task: ${{ matrix.task }}
          projectDir: ${{ matrix.projectDir }}
          gradleEnterpriseUrl: ${{ env.GRADLE_ENTERPRISE_URL }}
        if: (env.EXPERIMENT_ID == 'ALL' || env.EXPERIMENT_ID == 'exp3')
      - name: Print Summary
        run: |
          find gradle-enterprise-gradle-build-validation/.data -name "*.receipt" -print0 | sort -z | xargs -r0 cat
