name: Spring Boot

on:
  schedule:
    - cron: "0 23 * * 5"
  workflow_dispatch:

permissions:
  contents: read

env:
  DEVELOCITY_URL: "https://ge.solutions-team.gradle.com"
  GIT_REPO: "https://github.com/spring-projects/spring-boot"
  TASKS: "build"

jobs:
  experiments:
    name: Experiment ${{ matrix.experimentId }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - experimentId: 1
          - experimentId: 2
          - experimentId: 3
    runs-on: ubuntu-latest
    outputs:
      buildScanExperiment1: ${{ steps.run-exp1.outputs.buildScanSecondBuild }}
      buildScanExperiment2: ${{ steps.run-exp2.outputs.buildScanSecondBuild }}
      buildScanExperiment3: ${{ steps.run-exp3.outputs.buildScanSecondBuild }}
    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@v1.3.1
      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: "temurin"
      - name: Download latest version of the validation scripts
        uses: gradle/develocity-build-validation-scripts/.github/actions/gradle/download@actions-stable
        with:
          downloadDevelopmentRelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure validation scripts network settings
        uses: gradle/develocity-oss-projects/.github/actions/configure-validation-scripts-network-settings@main
      - name: Ignore Test Failures
        run: |
          mkdir ~/git-hooks
          echo -e 'echo "\nallprojects { tasks.withType(Test).configureEach { ignoreFailures = true } }" >> build.gradle\n' >> ~/git-hooks/post-checkout
          chmod +x ~/git-hooks/post-checkout
          git config --global core.hooksPath ~/git-hooks
      - name: Run experiment 1
        id: run-exp1
        uses: gradle/develocity-build-validation-scripts/.github/actions/gradle/experiment-1@actions-stable
        env:
          DEVELOCITY_ACCESS_KEY: "${{ secrets.DV_SOLUTIONS_ACCESS_KEY }}"
        with:
          gitRepo: ${{ env.GIT_REPO }}
          tasks: ${{ env.TASKS }}
          develocityUrl: ${{ env.DEVELOCITY_URL }}
        if: matrix.experimentId == 1
      - name: Run experiment 2
        id: run-exp2
        uses: gradle/develocity-build-validation-scripts/.github/actions/gradle/experiment-2@actions-stable
        env:
          DEVELOCITY_ACCESS_KEY: "${{ secrets.DV_SOLUTIONS_ACCESS_KEY }}"
        with:
          gitRepo: ${{ env.GIT_REPO }}
          tasks: ${{ env.TASKS }}
          develocityUrl: ${{ env.DEVELOCITY_URL }}
          failIfNotFullyCacheable: true
        if: matrix.experimentId == 2
      - name: Run experiment 3
        id: run-exp3
        uses: gradle/develocity-build-validation-scripts/.github/actions/gradle/experiment-3@actions-stable
        env:
          DEVELOCITY_ACCESS_KEY: "${{ secrets.DV_SOLUTIONS_ACCESS_KEY }}"
        with:
          gitRepo: ${{ env.GIT_REPO }}
          tasks: ${{ env.TASKS }}
          develocityUrl: ${{ env.DEVELOCITY_URL }}
          failIfNotFullyCacheable: true
        if: matrix.experimentId == 3

  analyze:
    name: Analyze results
    runs-on: ubuntu-latest
    needs: experiments
    if: always()
    steps:
      - name: Analyze experiment results
        uses: gradle/develocity-oss-projects/.github/actions/analyze-gradle-experiment-results@erichaagdev/analyze-spring-results-using-gemini
        with:
          develocityApiKey: ${{ secrets.DEVELOCITY_API_KEY }}
          geminiApiKey: ${{ secrets.GEMINI_API_KEY }}
          buildScanExperiment1: ${{ needs.experiments.outputs.buildScanExperiment1 }}
          buildScanExperiment2: ${{ needs.experiments.outputs.buildScanExperiment2 }}
          buildScanExperiment3: ${{ needs.experiments.outputs.buildScanExperiment3 }}
